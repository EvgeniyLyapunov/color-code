{"version":3,"file":"static/js/206.f42c506f.chunk.js","mappings":"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","sources":["utils/clearUserCodeField.js","utils/generateAnswer.js","utils/checkForVictory.js","modules/game-view/components/confirm-btn/ConfirmBtn.js","modules/game-view/components/counter/Counter.js","modules/game-view/components/user-code-field/UserCodeField.js","modules/game-view/components/palitra/Palitra.js","modules/game-view/components/item-of-user-code/ItemOfUserCode.js","modules/game-view/components/users-move/UsersMove.js","modules/game-view/components/item-of-answer/ItemOfAnswer.js","modules/game-view/components/answer/Answer.js","modules/game-view/components/victory-message/VictoryMessage.js","modules/game-view/components/field-of-moves/FieldOfMoves.js","utils/isUserCodeReady.js","modules/game-view/GameView.js"],"sourcesContent":["const clearUserCodeField = (userCode) => {\n  for (let field in userCode) {\n    const colorClass = `user-code-field__item_${userCode[`${field}`]}`;\n    document.getElementById(`${field}`).classList.remove(colorClass);\n  }\n};\n\nexport default clearUserCodeField;\n","const generateAnswer = (user, secret) => {\n  const answer = [];\n  const secretCode = JSON.parse(JSON.stringify(secret));\n  const userCode = JSON.parse(JSON.stringify(user));\n\n  for (let field in userCode) {\n    if (userCode[`${field}`] === secretCode[`${field}`]) {\n      answer.push('yes');\n      delete secretCode[`${field}`];\n      delete userCode[`${field}`];\n    }\n  }\n\n  for (let field in userCode) {\n    let res = 'no';\n    for (let item in secretCode) {\n      if (userCode[`${field}`] === secretCode[`${item}`]) {\n        res = 'almost';\n        delete secretCode[`${item}`];\n        break;\n      }\n    }\n    answer.push(res);\n  }\n  shuffle(answer);\n  return answer;\n};\n\nexport default generateAnswer;\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1)); // случайный индекс от 0 до i\n    // поменять элементы местами\n    // используем для этого синтаксис \"деструктурирующее присваивание\",\n    // то же самое можно записать как:\n    // let t = array[i]; array[i] = array[j]; array[j] = t\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n","const checkForVictory = (answer) => {\n  const isWin = answer.filter((item) => item === 'yes');\n  if (isWin.length === 4) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default checkForVictory;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport {\n  usersMoves,\n  responsesToUserMoves,\n  isWin,\n  lifePower,\n} from '../../../../redux/slices/gameSlice';\nimport { gameStage } from '../../../../redux/slices/globalSlice';\nimport clearUserCodeField from '../../../../utils/clearUserCodeField';\nimport generateAnswer from '../../../../utils/generateAnswer';\nimport checkForVictory from '../../../../utils/checkForVictory';\n\nimport './confirm-btn.scss';\n\nconst ConfirmBtn = ({ show }) => {\n  const dispatch = useDispatch();\n  const isAlive = useSelector((state) => state.gameReducer.lifePower);\n  const secretCode = useSelector((state) => state.globalReducer.secretCode);\n  const currentUserCode = useSelector(\n    (state) => state.gameReducer.usersVariantCode\n  );\n  // флаг анимации нажатия кнопки \"Сделать ход\"\n  const [confirmCode, setConfirmCode] = useState(false);\n\n  // метод нажатия кнопки \"Сделать ход\"\n  const onConfirmCode = () => {\n    // анимация нажатия кнопки\n    setConfirmCode((confirmCode) => (confirmCode = !confirmCode));\n    // генерация ответа на ход\n    const answer = generateAnswer(currentUserCode, secretCode);\n\n    setTimeout(() => {\n      // анимация отжатия кнопки\n      setConfirmCode((confirmCode) => (confirmCode = !confirmCode));\n      // очистка полей ввода варианта кода игрока\n      clearUserCodeField(currentUserCode);\n      // сохранение в store варианта кода и соответственно вывода его на игровое поле\n      dispatch(usersMoves(currentUserCode));\n      // сохранение в store ответ на ход и вывод ответа в игровое поле\n      setTimeout(() => {\n        dispatch(responsesToUserMoves(answer));\n        dispatch(lifePower());\n        // проверка ответа на победу\n        const checkWin = checkForVictory(answer);\n        if (checkWin) {\n          dispatch(isWin());\n        }\n        // проверка оставшихся ходов\n        if (!checkWin && isAlive === 15) {\n          dispatch(gameStage('lose'));\n        }\n      }, 1000);\n    }, 450);\n  };\n\n  const isReady = useSelector((state) => state.gameReducer.isCodeReady);\n  const btnStyle = classNames({\n    'confirm-btn': true,\n    'confirm-btn_visibility': show,\n    'confirm-btn_opacity': show,\n    'confirm-btn_ready': isReady,\n    'confirm-btn_press': confirmCode,\n  });\n\n  return (\n    <button className={btnStyle} disabled={!isReady} onClick={onConfirmCode}>\n      Сделать ход\n    </button>\n  );\n};\n\nexport default ConfirmBtn;\n","import { useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './counter.scss';\n\nconst Counter = ({ show }) => {\n  const life = useSelector((state) => state.gameReducer.lifePower);\n  const counterStyle = classNames({\n    counter: true,\n    counter_visibility: show,\n    counter_opacity: show,\n  });\n  const lineColorStyle = classNames({\n    counter__line: true,\n    counter__line_danger: life > 60 ? false : true,\n    counter__line_verydanger: life > 30 ? false : true,\n  });\n\n  const lineStyle = {\n    width: life,\n  };\n\n  return (\n    <div className={counterStyle}>\n      <span className='counter__label'>Ваша энергия</span>\n      <div className={lineColorStyle} style={lineStyle}></div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { codeItemId, chooseColor } from '../../../../redux/slices/gameSlice';\n\nimport './user-code-field.scss';\n\nconst UserCodeField = ({ show }) => {\n  const dispatch = useDispatch();\n\n  const codeFieldStyle = classNames({\n    'user-code-field': true,\n    'user-code-field_visibility': show,\n    'user-code-field_opacity': show,\n  });\n\n  // функция откывает палитру и анимирует нажатие кнопки 'user-code-field__item'\n  // записываут в store id нажатого элемента\n  const openEditCodeModal = (e) => {\n    if (e.target !== e.currentTarget) {\n      dispatch(codeItemId(e.target.id));\n      e.target.classList.add('user-code-field__item_pressed');\n      setTimeout(() => {\n        e.target.classList.remove('user-code-field__item_pressed');\n        dispatch(chooseColor());\n      }, 400);\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div\n      className={codeFieldStyle}\n      id='user-code-field'\n      onClick={(e) => openEditCodeModal(e)}\n    >\n      <div className='user-code-field__item' id='first'></div>\n      <div className='user-code-field__item' id='second'></div>\n      <div className='user-code-field__item' id='third'></div>\n      <div className='user-code-field__item' id='fourth'></div>\n    </div>\n  );\n};\n\nexport default UserCodeField;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport {\n  selectedColorId,\n  chooseColor,\n  usersVariantCode,\n} from '../../../../redux/slices/gameSlice';\n\nimport './palitra.scss';\n\nconst Palitra = () => {\n  const isPalitraVisible = useSelector(\n    (store) => store.gameReducer.isChooseColor\n  );\n  const itemCode = useSelector((store) => store.gameReducer.codeItemId);\n  const usersCode = useSelector((store) => store.gameReducer.usersVariantCode);\n\n  const dispatch = useDispatch();\n\n  const [isDisplay, setIsDisplay] = useState(false);\n  const [isOpacity, setIsOpacity] = useState(false);\n\n  // открывает и закрывает палитру\n  useEffect(() => {\n    // условие для первого запуска\n    if (isPalitraVisible === false && isDisplay === false) {\n      return;\n      // условие для открытия палитры\n    } else if (isPalitraVisible === true && isDisplay === false) {\n      setIsDisplay((isDisplay) => (isDisplay = !isDisplay));\n      setTimeout(() => {\n        setIsOpacity((isOpacity) => (isOpacity = !isOpacity));\n      }, 50);\n      return;\n      // условие для закрытия палитры\n    } else if (isPalitraVisible === false && isDisplay === true) {\n      setIsOpacity((isOpacity) => (isOpacity = !isOpacity));\n      setTimeout(() => {\n        setIsDisplay((isDisplay) => (isDisplay = !isDisplay));\n      }, 350);\n    }\n    // eslint-disable-next-line\n  }, [isPalitraVisible]);\n\n  // функция нажатия на кнопку с цветом в палитре\n  const palitraItemPress = (e) => {\n    if (e.target !== e.currentTarget) {\n      if (e.target.id === 'cancel') {\n        dispatch(selectedColorId(''));\n        const oldColorClass = `user-code-field__item_${\n          usersCode[`${itemCode}`]\n        }`;\n        dispatch(usersVariantCode());\n        e.target.classList.add('palitra__box-item_pressed');\n        // этот setTimeout запускается после анимации нажатия кнопки\n        // запускает анимацию отжатия кнопки и анимацию исчезновения палитры\n        setTimeout(() => {\n          e.target.classList.remove('palitra__box-item_pressed');\n          dispatch(chooseColor());\n          // этот setTimeout запускается после анимации исчезновения палитры\n          // и запускает анимацию удаление цвета на выбранный элемент\n          setTimeout(() => {\n            document\n              .getElementById(`${itemCode}`)\n              .classList.remove(oldColorClass);\n          }, 500);\n        }, 350);\n      } else {\n        dispatch(selectedColorId(e.target.id));\n        const oldColorClass = `user-code-field__item_${\n          usersCode[`${itemCode}`]\n        }`;\n        dispatch(usersVariantCode());\n        e.target.classList.add('palitra__box-item_pressed');\n        // этот setTimeout запускается после анимации нажатия кнопки\n        // запускает анимацию отжатия кнопки и анимацию исчезновения палитры\n        setTimeout(() => {\n          e.target.classList.remove('palitra__box-item_pressed');\n          dispatch(chooseColor());\n          // этот setTimeout запускается после анимации исчезновения палитры\n          // и запускает анимацию добавления выбранного цвета на выбранный элемент\n          setTimeout(() => {\n            document\n              .getElementById(`${itemCode}`)\n              .classList.remove(oldColorClass);\n            const colorClass = `user-code-field__item_${e.target.id}`;\n            document.getElementById(`${itemCode}`).classList.add(colorClass);\n          }, 500);\n        }, 350);\n      }\n    } else {\n      return;\n    }\n  };\n\n  const palitraStyle = classNames({\n    palitra: true,\n    palitra_display: isDisplay,\n    palitra_opacity: isOpacity,\n  });\n\n  return (\n    <div className={palitraStyle}>\n      <div className='palitra__box' onClick={(e) => palitraItemPress(e)}>\n        <div className='palitra__box-item palitra__box-item_red' id='red'></div>\n        <div\n          className='palitra__box-item palitra__box-item_yellow'\n          id='yellow'\n        ></div>\n        <div\n          className='palitra__box-item palitra__box-item_blue'\n          id='blue'\n        ></div>\n        <div\n          className='palitra__box-item palitra__box-item_green'\n          id='green'\n        ></div>\n        <div\n          className='palitra__box-item palitra__box-item_brown'\n          id='brown'\n        ></div>\n        <div className='palitra__box-item palitra__box-item_cancel' id='cancel'>\n          Отменить\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Palitra;\n","import './item-of-user-code.scss';\n\nconst ItemOfUserCode = ({ classField }) => {\n  return <div className={classField}></div>;\n};\n\nexport default ItemOfUserCode;\n","import { nanoid } from '@reduxjs/toolkit';\n\nimport ItemOfUserCode from '../item-of-user-code/ItemOfUserCode';\n\nimport './user-move.scss';\n\nconst UserMove = ({ userCode }) => {\n  const colorCode = [];\n  for (let field in userCode) {\n    const classField = `item-of-user-code item-of-user-code_${\n      userCode[`${field}`]\n    }`;\n    const item = <ItemOfUserCode key={nanoid()} classField={classField} />;\n    colorCode.push(item);\n  }\n  return <div className='user-move'>{colorCode}</div>;\n};\n\nexport default UserMove;\n","import './item-of-answer.scss';\n\nconst ItemOfAnswer = ({ classField }) => {\n  return <div className={classField}></div>;\n};\n\nexport default ItemOfAnswer;\n","import { nanoid } from '@reduxjs/toolkit';\n\nimport ItemOfAnswer from '../item-of-answer/ItemOfAnswer';\n\nimport './answer.scss';\n\nconst Answer = ({ answer }) => {\n  const response = answer.map((item) => {\n    switch (item) {\n      case 'yes':\n        const yes = 'item-of-answer item-of-answer_yes';\n        return <ItemOfAnswer key={nanoid()} classField={yes} />;\n      case 'no':\n        const no = 'item-of-answer item-of-answer_no';\n        return <ItemOfAnswer key={nanoid()} classField={no} />;\n      case 'almost':\n        const almost = 'item-of-answer item-of-answer_almost';\n        return <ItemOfAnswer key={nanoid()} classField={almost} />;\n      default:\n        return 'Unknown case';\n    }\n  });\n\n  return <div className='answer'>{response}</div>;\n};\n\nexport default Answer;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport UserMove from '../users-move/UsersMove';\nimport Answer from '../answer/Answer';\nimport { gameStage, bgFinishWin } from '../../../../redux/slices/globalSlice';\n\nimport './victory-message.scss';\n\nconst VictoryMessage = () => {\n  const bgGame = useSelector((state) => state.globalReducer.bgGame);\n  const victory = useSelector((state) => state.gameReducer.isWin);\n  const moves = useSelector((state) => state.gameReducer.usersMoves);\n  const answers = useSelector(\n    (state) => state.gameReducer.responsesToUserMoves\n  );\n  const winSpeech = useSelector((state) => state.gameReducer.winSpeech);\n\n  const [userMoveComponent, setUserMoveComponent] = useState(null);\n  const [answerComponent, setAnswerComponent] = useState(null);\n\n  // флаг показа этого окна\n  const [showVictory, setShowVictory] = useState(false);\n\n  useEffect(() => {\n    if (moves[moves.length - 1] != null) {\n      setUserMoveComponent(<UserMove userCode={moves[moves.length - 1]} />);\n      setAnswerComponent(<Answer answer={answers[answers.length - 1]} />);\n      setTimeout(() => {\n        setShowVictory((showVictory) => (showVictory = !showVictory));\n      }, 1000);\n\n      // выбор bg для финишного окна\n      dispatch(bgFinishWin());\n    }\n    // eslint-disable-next-line\n  }, [victory]);\n\n  // флаг анимации нажатия кнопки 'Дальше'\n  const [pressNext, setPressNext] = useState(false);\n  const dispatch = useDispatch();\n\n  const onPressNext = () => {\n    // анимация нажатия кнопки 'Дальше'\n    setPressNext((pressNext) => (pressNext = !pressNext));\n\n    setTimeout(() => {\n      // анимация отжатия кнопки 'Дальше'\n      setPressNext((pressNext) => (pressNext = !pressNext));\n\n      // действия после завершения анимации отжатия кнопки 'Дальше'\n      setTimeout(() => {\n        dispatch(gameStage('finish'));\n      }, 400);\n    }, 400);\n  };\n\n  const nextBtnStyle = classNames({\n    'victory-message__btn-next': true,\n    'victory-message__btn-next_press': pressNext,\n  });\n\n  const victoryMessageStyle = classNames({\n    'victory-message': true,\n    [`victory-message_${bgGame}`]: true,\n    'victory-message_display': showVictory,\n    'victory-message_opacity': showVictory,\n  });\n\n  const wordsOfVictory = useMemo(\n    () =>\n      winSpeech[Math.floor(Math.random() * (winSpeech.length - 1 + 1)) + 1 - 1],\n    // eslint-disable-next-line\n    []\n  );\n\n  return (\n    <div className={victoryMessageStyle}>\n      <span className='victory-message__words'>{wordsOfVictory}</span>\n      {answerComponent}\n      {userMoveComponent}\n      <button className={nextBtnStyle} onClick={onPressNext}>\n        Дальше\n      </button>\n    </div>\n  );\n};\n\nexport default VictoryMessage;\n","import { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport UserMove from '../users-move/UsersMove';\nimport Answer from '../answer/Answer';\n\nimport './field-of-moves.scss';\n\nconst FieldOfMoves = () => {\n  const moves = useSelector((state) => state.gameReducer.usersMoves);\n  const answers = useSelector(\n    (state) => state.gameReducer.responsesToUserMoves\n  );\n\n  const movesList = moves.map((item) => {\n    return <UserMove key={nanoid()} userCode={item} />;\n  });\n\n  const answersList = answers.map((item) => {\n    return <Answer key={nanoid()} answer={item} />;\n  });\n\n  return (\n    <div className='field-of-moves'>\n      <div className='field-of-moves__responses'>{answersList}</div>\n      <div className='field-of-moves__requests'>{movesList}</div>\n    </div>\n  );\n};\n\nexport default FieldOfMoves;\n","const isUserCodeReady = (userCode) => {\n  for (let field in userCode) {\n    if (userCode[`${field}`] === '') {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport default isUserCodeReady;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport ConfirmBtn from './components/confirm-btn/ConfirmBtn';\nimport Counter from './components/counter/Counter';\nimport UserCodeField from './components/user-code-field/UserCodeField';\nimport Palitra from './components/palitra/Palitra';\nimport VictoryMessage from './components/victory-message/VictoryMessage';\nimport FieldOfMoves from './components/field-of-moves/FieldOfMoves';\nimport isUserCodeReady from '../../utils/isUserCodeReady';\n\nimport { isCodeReady } from '../../redux/slices/gameSlice';\n\nimport './game-view.scss';\n\nconst GameView = () => {\n  const dispatch = useDispatch();\n  const userCode = useSelector((state) => state.gameReducer.usersVariantCode);\n  const isCurrentReady = useSelector((state) => state.gameReducer.isCodeReady);\n  // флаг для включения плавного появления элементов\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(!show);\n    }, 50);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const isReady = isUserCodeReady(userCode);\n    if ((isReady && !isCurrentReady) || (!isReady && isCurrentReady)) {\n      dispatch(isCodeReady());\n    }\n    // eslint-disable-next-line\n  }, [userCode]);\n\n  const bgGame = useSelector((state) => state.globalReducer.bgGame);\n\n  const gameViewClass = classNames({\n    'game-view': true,\n    [`game-${bgGame}`]: true,\n  });\n\n  return (\n    <div className={gameViewClass}>\n      <FieldOfMoves />\n      <UserCodeField show={show} />\n      <ConfirmBtn show={show} />\n      <Counter show={show} />\n      <Palitra />\n      <VictoryMessage />\n    </div>\n  );\n};\n\nexport default GameView;\n"],"names":["userCode","field","colorClass","concat","document","getElementById","classList","remove","user","secret","answer","secretCode","JSON","parse","stringify","push","res","item","array","i","length","j","Math","floor","random","_ref","shuffle","filter","show","dispatch","useDispatch","isAlive","useSelector","state","gameReducer","lifePower","globalReducer","currentUserCode","usersVariantCode","_useState","useState","_useState2","_slicedToArray","confirmCode","setConfirmCode","isReady","isCodeReady","btnStyle","classNames","_jsx","className","disabled","onClick","generateAnswer","setTimeout","clearUserCodeField","usersMoves","responsesToUserMoves","checkWin","checkForVictory","isWin","gameStage","children","life","counterStyle","counter","counter_visibility","counter_opacity","lineColorStyle","counter__line","counter__line_danger","counter__line_verydanger","lineStyle","width","_jsxs","style","codeFieldStyle","id","e","target","currentTarget","codeItemId","add","chooseColor","openEditCodeModal","isPalitraVisible","store","isChooseColor","itemCode","usersCode","isDisplay","setIsDisplay","_useState3","_useState4","isOpacity","setIsOpacity","useEffect","palitraStyle","palitra","palitra_display","palitra_opacity","selectedColorId","oldColorClass","palitraItemPress","classField","colorCode","ItemOfUserCode","nanoid","response","map","ItemOfAnswer","_classNames","bgGame","victory","moves","answers","winSpeech","userMoveComponent","setUserMoveComponent","answerComponent","setAnswerComponent","_useState5","_useState6","showVictory","setShowVictory","UserMove","Answer","bgFinishWin","_useState7","_useState8","pressNext","setPressNext","nextBtnStyle","victoryMessageStyle","_defineProperty","wordsOfVictory","useMemo","movesList","answersList","isCurrentReady","setShow","isUserCodeReady","gameViewClass","FieldOfMoves","UserCodeField","ConfirmBtn","Counter","Palitra","VictoryMessage"],"sourceRoot":""}